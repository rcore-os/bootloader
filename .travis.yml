language: rust

rust:
- nightly

os:
  - linux
  - osx
  - windows

cache:
  directories:
    - $HOME/.cargo
    - $HOME/Library/Caches/Homebrew
    - $TRAVIS_BUILD_DIR/target
    - $TRAVIS_BUILD_DIR/example-kernel/target

addons:
  apt:
    packages:
      - qemu-system-x86
  homebrew:
    packages:
      - qemu

install:
  - if [ $TRAVIS_OS_NAME = windows ]; then choco install qemu; export PATH="/c/Program Files/qemu:$PATH"; fi

before_script:
- rustup component add rust-src
- "(test -x $HOME/.cargo/bin/cargo-xbuild || cargo install cargo-xbuild)"

sudo: false

notifications:
  email:
    on_success: never
    on_failure: change

script:
- cd example-kernel; cargo xbuild --target x86_64-example-kernel.json; cd ..
- cd builder; cargo run -- --kernel ../example-kernel/target/x86_64-example-kernel/debug/example-kernel; cd ..
- qemu-system-x86_64 -drive format=raw,file=target/x86_64-bootloader/release/bootimage.bin -device isa-debug-exit,iobase=0xf4,iosize=0x04 -display none; if [ $? -eq 123 ]; then (exit 0); else (exit 1); fi
- cd builder; cargo run -- --kernel ../example-kernel/target/x86_64-example-kernel/debug/example-kernel --features vga_320x200; cd ..
- qemu-system-x86_64 -drive format=raw,file=target/x86_64-bootloader/release/bootimage.bin -device isa-debug-exit,iobase=0xf4,iosize=0x04 -display none; if [ $? -eq 123 ]; then (exit 0); else (exit 1); fi
